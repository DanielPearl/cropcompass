# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-04 18:58
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('table_name', models.CharField(blank=True, max_length=64, null=True)),
                ('unit', models.CharField(blank=True, max_length=64, null=True)),
                ('field', models.CharField(blank=True, max_length=64, null=True)),
                ('source_name', models.CharField(blank=True, max_length=256, null=True)),
                ('source_link', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'metadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NassCropAnimals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop', models.CharField(blank=True, max_length=64, null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('fips', models.IntegerField(blank=True, null=True)),
                ('animals', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'nass_crop_animals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NassCropArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop', models.CharField(blank=True, max_length=64, null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('fips', models.IntegerField(blank=True, null=True)),
                ('acres', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'nass_crop_area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NassCropFarms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop', models.CharField(blank=True, max_length=64, null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('fips', models.IntegerField(blank=True, null=True)),
                ('farms', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'nass_crop_farms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OainHarvestAcres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop', models.CharField(blank=True, max_length=64, null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('fips', models.IntegerField(blank=True, null=True)),
                ('harvested_acres', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oain_harvest_acres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RawNassCensusData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_desc', models.CharField(blank=True, max_length=32, null=True)),
                ('sector_desc', models.CharField(blank=True, max_length=32, null=True)),
                ('group_desc', models.CharField(blank=True, max_length=64, null=True)),
                ('commodity_desc', models.CharField(blank=True, max_length=64, null=True)),
                ('class_desc', models.CharField(blank=True, max_length=128, null=True)),
                ('production_practice_desc', models.CharField(blank=True, max_length=64, null=True)),
                ('util_practice_desc', models.CharField(blank=True, max_length=32, null=True)),
                ('statistical_category_desc', models.CharField(blank=True, max_length=64, null=True)),
                ('unit_desc', models.CharField(blank=True, max_length=32, null=True)),
                ('domain_desc', models.CharField(blank=True, max_length=64, null=True)),
                ('domain_category_description', models.CharField(blank=True, max_length=128, null=True)),
                ('data_item', models.CharField(blank=True, max_length=256, null=True)),
                ('aggregation_level_desc', models.CharField(blank=True, max_length=32, null=True)),
                ('state_ansi', models.CharField(blank=True, max_length=16, null=True)),
                ('state_fips_code', models.IntegerField(blank=True, null=True)),
                ('state_alpha', models.CharField(blank=True, max_length=2, null=True)),
                ('state_name', models.CharField(blank=True, max_length=16, null=True)),
                ('asd_code', models.IntegerField(blank=True, null=True)),
                ('asd_desc', models.CharField(blank=True, max_length=16, null=True)),
                ('county_ansi', models.IntegerField(blank=True, null=True)),
                ('county_code', models.IntegerField(blank=True, null=True)),
                ('county_name', models.CharField(blank=True, max_length=32, null=True)),
                ('region_desc', models.CharField(blank=True, max_length=64, null=True)),
                ('zip_5', models.DecimalField(blank=True, decimal_places=0, max_digits=5, null=True)),
                ('watershed_code', models.IntegerField(blank=True, null=True)),
                ('watershed_desc', models.CharField(blank=True, max_length=64, null=True)),
                ('congr_district_code', models.IntegerField(blank=True, null=True)),
                ('country_code', models.IntegerField(blank=True, null=True)),
                ('country_name', models.CharField(blank=True, max_length=64, null=True)),
                ('location_desc', models.CharField(blank=True, max_length=256, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('frequency_desc', models.CharField(blank=True, max_length=16, null=True)),
                ('begin_code', models.IntegerField(blank=True, null=True)),
                ('end_code', models.IntegerField(blank=True, null=True)),
                ('reference_period_desc', models.CharField(blank=True, max_length=16, null=True)),
                ('week_ending', models.DateField(blank=True, null=True)),
                ('load_time', models.DateTimeField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=64, null=True)),
                ('cv', models.CharField(blank=True, max_length=16, null=True)),
                ('value_num', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
            ],
            options={
                'db_table': 'raw_nass_census_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RawOainData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity', models.CharField(blank=True, max_length=128, null=True)),
                ('county', models.CharField(blank=True, max_length=64, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('harvest_units', models.IntegerField(blank=True, null=True)),
                ('yield_unit', models.CharField(blank=True, max_length=32, null=True)),
                ('production_unit', models.IntegerField(blank=True, null=True)),
                ('price_unit', models.CharField(blank=True, max_length=32, null=True)),
                ('value_produced', models.CharField(blank=True, max_length=64, null=True)),
                ('percent_sold', models.IntegerField(blank=True, null=True)),
                ('value_sales', models.CharField(blank=True, max_length=64, null=True)),
                ('harvest_unit_of_measure', models.CharField(blank=True, max_length=32, null=True)),
                ('yield_unit_of_measure', models.CharField(blank=True, max_length=32, null=True)),
                ('production_unit_of_measure', models.CharField(blank=True, max_length=32, null=True)),
                ('price_unit_of_measure', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'raw_oain_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RawSubsidyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('program', models.CharField(blank=True, max_length=64, null=True)),
                ('fips', models.IntegerField(blank=True, null=True)),
                ('number_of_recipients', models.IntegerField(blank=True, null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('subsidy_total', models.IntegerField(blank=True, null=True)),
                ('crop', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'raw_subsidy_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegionLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('st_code', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('co_code', models.DecimalField(blank=True, decimal_places=0, max_digits=3, null=True)),
                ('region', models.CharField(blank=True, max_length=90, null=True)),
                ('fips', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'region_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubsidyDollars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop', models.CharField(blank=True, max_length=64, null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('fips', models.IntegerField(blank=True, null=True)),
                ('subsidy_dollars', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subsidy_dollars',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubsidyRecipients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity', models.CharField(blank=True, max_length=64, null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('fips', models.IntegerField(blank=True, null=True)),
                ('subsidy_recipients', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subsidy_recipients',
                'managed': False,
            },
        ),
    ]
